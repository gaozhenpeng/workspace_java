<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.at.spring_boot.mybatis.mapper3.BlogMapper">
  <resultMap id="BaseResultMap" type="com.at.spring_boot.mybatis.po3.Blog">
    <id column="blog_id" jdbcType="BIGINT" property="blogId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="created_datetime" jdbcType="TIMESTAMP" property="createdDatetime" />
    <result column="updated_datetime" jdbcType="TIMESTAMP" property="updatedDatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    blog_id, name, content, created_datetime, updated_datetime
  </sql>
  <select id="selectByExample" parameterType="com.at.spring_boot.mybatis.po3.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where blog_id = #{blogId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog
    where blog_id = #{blogId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.at.spring_boot.mybatis.po3.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.at.spring_boot.mybatis.po3.Blog">
    insert into blog (blog_id, name, content, 
      created_datetime, updated_datetime)
    values (#{blogId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createdDatetime,jdbcType=TIMESTAMP}, #{updatedDatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.at.spring_boot.mybatis.po3.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createdDatetime != null">
        created_datetime,
      </if>
      <if test="updatedDatetime != null">
        updated_datetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdDatetime != null">
        #{createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDatetime != null">
        #{updatedDatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.at.spring_boot.mybatis.po3.BlogExample" resultType="java.lang.Long">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.blogId != null">
        blog_id = #{record.blogId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDatetime != null">
        created_datetime = #{record.createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedDatetime != null">
        updated_datetime = #{record.updatedDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set blog_id = #{record.blogId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      created_datetime = #{record.createdDatetime,jdbcType=TIMESTAMP},
      updated_datetime = #{record.updatedDatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.at.spring_boot.mybatis.po3.Blog">
    update blog
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdDatetime != null">
        created_datetime = #{createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDatetime != null">
        updated_datetime = #{updatedDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where blog_id = #{blogId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.at.spring_boot.mybatis.po3.Blog">
    update blog
    set name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      created_datetime = #{createdDatetime,jdbcType=TIMESTAMP},
      updated_datetime = #{updatedDatetime,jdbcType=TIMESTAMP}
    where blog_id = #{blogId,jdbcType=BIGINT}
  </update>
</mapper>