# web server
server.port = 8080
server.servlet.context-path = /demo


# management server
management.server.port = 8081
management.server.address = 127.0.0.1
management.server.servlet.context-path = /mgt

# expose all endpoints by web
management.endpoints.web.exposure.include = *
management.endpoint.health.show-details = always

# enable shutdown
management.endpoint.shutdown.enabled=true




##### kafka
spring.kafka.bootstrap-servers = localhost:9092


spring.kafka.listener.ack-mode = MANUAL_IMMEDIATE
spring.kafka.listener.ack-count = 10
spring.kafka.listener.ack-time.nano = 100000
spring.kafka.listener.poll-timeout.nano = 100000
spring.kafka.listener.concurrency = 3
spring.kafka.listener.type = BATCH

spring.kafka.consumer.enable-auto-commit = false
spring.kafka.consumer.auto-commit-interval.nano = 100000
spring.kafka.consumer.auto-offset-reset = latest
spring.kafka.consumer.max-poll-records = 100
spring.kafka.consumer.group-id = spring-boot-spring-kafka

spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages = com.at.spring_boot.kafka.vo

spring.kafka.producer.acks = all
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer

# kafka-topics --zookeeper localhost:2181/kafka --create --topic comm-kafka-topic-s2p --replication-factor 1 --partitions 3
# kafka-topics --zookeeper localhost:2181/kafka --create --topic comm-kafka-topic-p2s --replication-factor 1 --partitions 3
kafka.topic.comm.s2p = comm-kafka-topic-s2p
kafka.topic.comm.p2s = comm-kafka-topic-p2s
